#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# nvm
export NVM_DIR="$HOME/.nvm"
if [[ "$OSTYPE" == "darwin"* ]]; then
  . "/usr/local/opt/nvm/nvm.sh"
fi

export SVN_EDITOR="vim"
export EDITOR="vim"
export VISUAL="vim"

# go
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"

# python
# export PIP_REQUIRE_VIRTUALENV=true
alias pyenv="source ${HOME}/pyenv/bin/activate"
if [[ "$OSTYPE" == "darwin"* ]]; then
  alias pip="pip2"
fi

# android sdk
export ANDROID_HOME=${HOME}/Library/Android/sdk
export PATH=${PATH}:${ANDROID_HOME}/tools
export PATH=${PATH}:${ANDROID_HOME}/tools/bin
export PATH=${PATH}:${ANDROID_HOME}/platform-tools

# android ndk
export ANDROID_NDK=${HOME}/Library/Android/sdk/ndk-bundle
export PATH=${PATH}:${ANDROID_NDK}

# jdk
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_141.jdk/Contents/Home
export PATH=${PATH}:${JAVA_HOME}/bin

# The next line updates PATH for the Google Cloud SDK.
if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]; then source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ]; then source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"; fi

# google_appengine
# export PYTHONPATH=${PYTHONPATH}:/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/platform/google_appengine
export PATH=${PATH}:/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin

# rbenv
eval "$(rbenv init -)"

ulimit -n 1200

# alias for tmux
if [[ "$OSTYPE" == "darwin"* ]]; then
  alias subl='reattach-to-user-namespace subl'
  alias code='reattach-to-user-namespace code'
fi

alias vi='vim'

# integrate iterm2
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# alias for hub
alias h='hub'

# bind ssh-agent for tmux
if [ -z "$TMUX" ]; then
	# we're not in a tmux session

	if [ ! -z "$SSH_TTY" ]; then
		# We logged in via SSH

		# if ssh auth variable is missing
		if [ -z "$SSH_AUTH_SOCK" ]; then
			export SSH_AUTH_SOCK="$HOME/.ssh/.auth_socket"
		fi

		# if socket is available create the new auth session
		if [ ! -S "$SSH_AUTH_SOCK" ]; then
			`ssh-agent -a $SSH_AUTH_SOCK` > /dev/null 2>&1
			echo $SSH_AGENT_PID > $HOME/.ssh/.auth_pid
		fi

		# if agent isn't defined, recreate it from pid file
		if [ -z $SSH_AGENT_PID ]; then
			export SSH_AGENT_PID=`cat $HOME/.ssh/.auth_pid`
		fi

		# Add all default keys to ssh auth
		ssh-add 2>/dev/null

		# start tmux
		tmux attach
	fi
fi
