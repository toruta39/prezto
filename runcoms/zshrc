#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# linuxbrew
if [[ "$OSTYPE" == "linux"* ]]; then
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

# snap
if [[ "$OSTYPE" == "linux"* ]]; then
  export PATH="$PATH:/snap/bin"
fi

export SVN_EDITOR="nvim"
export EDITOR="nvim"
export VISUAL="nvim"

# go
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"

# python
export PATH="$PATH:$HOME/.local/bin"

# gettext
export PATH="$PATH:/usr/local/Cellar/gettext/0.20.1/bin"

# libicu
export PATH="/usr/local/opt/icu4c/bin:$PATH"
export PATH="/usr/local/opt/icu4c/sbin:$PATH"
export LDFLAGS="-L/usr/local/opt/icu4c/lib"
export CPPFLAGS="-I/usr/local/opt/icu4c/include"
export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig"

# android sdk
export ANDROID_HOME=${HOME}/Library/Android/sdk
export PATH=${PATH}:${ANDROID_HOME}/tools
export PATH=${PATH}:${ANDROID_HOME}/tools/bin
export PATH=${PATH}:${ANDROID_HOME}/platform-tools

# android ndk
export ANDROID_NDK=${HOME}/Library/Android/sdk/ndk-bundle
export PATH=${PATH}:${ANDROID_NDK}

# jdk
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home
export PATH=${PATH}:${JAVA_HOME}/bin

# custom
export PATH=${PATH}:${HOME}/bin

# asdf
. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

# gcloud
if [[ "$OSTYPE" == "darwin"* ]]; then
  # The next line updates PATH for the Google Cloud SDK.
  if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]; then source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"; fi
  # The next line enables shell command completion for gcloud.
  if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ]; then source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"; fi
else
  if [ -f '/home/ec2-user/google-cloud-sdk/path.zsh.inc' ]; then . '/home/ec2-user/google-cloud-sdk/path.zsh.inc'; fi
  if [ -f '/home/ec2-user/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/ec2-user/google-cloud-sdk/completion.zsh.inc'; fi
fi

# google_appengine
# export PYTHONPATH=${PYTHONPATH}:/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/platform/google_appengine
export PATH=${PATH}:/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin
export CLOUDSDK_PYTHON=$(which python3)

# mojave patch
export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/usr/local/Cellar/libffi/3.2.1/lib/pkgconfig

ulimit -n 1200

# alias for tmux
if [[ "$OSTYPE" == "darwin"* ]]; then
  alias subl='reattach-to-user-namespace subl'
  alias code='reattach-to-user-namespace code'
fi

alias vi='nvim'
alias v='nvim'
alias dc='docker-compose'

# integrate iterm2
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# alias for hub
alias h='hub'

# alias for terraform
alias tf='terraform'

# bind ssh-agent for tmux
if [ -z "$TMUX" ]; then
	# we're not in a tmux session

	if [ ! -z "$SSH_TTY" ]; then
		# We logged in via SSH

		# if ssh auth variable is missing
		if [ -z "$SSH_AUTH_SOCK" ]; then
			export SSH_AUTH_SOCK="$HOME/.ssh/.auth_socket"
		fi

		# if socket is available create the new auth session
		if [ ! -S "$SSH_AUTH_SOCK" ]; then
			`ssh-agent -a $SSH_AUTH_SOCK` > /dev/null 2>&1
			echo $SSH_AGENT_PID > $HOME/.ssh/.auth_pid
		fi

		# if agent isn't defined, recreate it from pid file
		if [ -z $SSH_AGENT_PID ]; then
			export SSH_AGENT_PID=`cat $HOME/.ssh/.auth_pid`
		fi

		# Add all default keys to ssh auth
		ssh-add 2>/dev/null

		# start tmux
		tmux attach
	fi
fi

# locale
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# wsl docker
if [ ! -z $WSL_DISTRO_NAME ]; then
  export DOCKER_HOST="tcp://localhost:2375"
fi
